/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *@author Letsibogo Ramadi
 */

package windows;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

public class AddModule extends javax.swing.JDialog {

    private static String modTitle, modLeader, modTerm;
    private static String modCredits, exams, courseworks, weighting;
    private static Object  modCode;
    
    //boolean flag array that is initially false
    private final boolean[] flags = new boolean[7];
    
    
    
    /*Creates new form NewJDialog*/
    public AddModule(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    //no-parameter constructor
    AddModule() {
       initComponents();
       myInitComponents();
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        modCodeLabel = new javax.swing.JLabel();
        fnameLabel = new javax.swing.JLabel();
        numExamsLabel = new javax.swing.JLabel();
        creditsLabel = new javax.swing.JLabel();
        numCWLabel = new javax.swing.JLabel();
        modLeaderLabel = new javax.swing.JLabel();
        modLeaderTextfield = new javax.swing.JTextField();
        weightingLabel = new javax.swing.JLabel();
        weightTextField = new javax.swing.JTextField();
        termLabel = new javax.swing.JLabel();
        modTermComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ADD NEW Module");
        setAlwaysOnTop(true);
        setPreferredSize(new java.awt.Dimension(630, 350));
        setResizable(false);

        modCodeLabel.setText("Module Code :");

        addModButton.setText("ADD ");
        addModButton.setToolTipText("Click to add the module and go back to the modules list table");
        addModButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addModButtonActionPerformed(evt);
            }
        });

        fnameLabel.setText("Module Title :");

        modTitleTextField.setToolTipText("Enter module title containing letters and spaces only , e.g: 'Starting out with Java'");
        modTitleTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                modTitleTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                modTitleTextFieldFocusLost(evt);
            }
        });

        modCodeTextField.setToolTipText("Enter module code containing 2 letters and 4 digits, e.g: 'CM1234'");
        modCodeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                modCodeTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                modCodeTextFieldFocusLost(evt);
            }
        });

        numExamsLabel.setText("Number of Exams :");

        creditsLabel.setText("Module Credits :");

        numCWLabel.setText("Number of Courseworks :");

        creditsTextField.setToolTipText("Enter module credits containing two digits e.g: 10 for a ten credit module");
        creditsTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                creditsTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                creditsTextFieldFocusLost(evt);
            }
        });

        numExamsTextfield.setToolTipText("Enter the number of exams expected to be sat for that module, should be written in two digits e.g: 02 for two exams");
        numExamsTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numExamsTextfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numExamsTextfieldFocusLost(evt);
            }
        });

        numExamsTextfield.setToolTipText("Enter the number of coursework assignments given for that module, should be written in two digits e.g: 02 for two assignments");
        numCWTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numCWTextfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numCWTextfieldFocusLost(evt);
            }
        });

        modLeaderLabel.setText("Module Leader :");

        modLeaderTextfield.setToolTipText("Enter module leader name containing letters and spaces only e.g: 'James Martin' ");
        modLeaderTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                modLeaderTextfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                modLeaderTextfieldFocusLost(evt);
            }
        });

        weightingLabel.setText("Weighting :");

        weightTextField.setToolTipText("Enter module weighting containing 2 digits e.g: 20 for twenty percent");
        weightTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                weightTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                weightTextFieldFocusLost(evt);
            }
        });

        termLabel.setText("Term :");

        modTermComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Autumn", "Spring"}));
        modTermComboBox.setToolTipText("Select whether staff member is internal or external");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fnameLabel)
                            .addComponent(modCodeLabel))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(addModButton)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(creditsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(creditsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(numCWLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numCWTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(numExamsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numExamsTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modLeaderLabel)
                            .addComponent(weightingLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modLeaderTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(weightTextField)
                                .addGap(18, 18, 18)
                                .addComponent(termLabel)
                                .addGap(18, 18, 18)
                                .addComponent(modTermComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(213, 213, 213)))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fnameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modCodeLabel)
                    .addComponent(modCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modLeaderLabel)
                    .addComponent(modLeaderTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightingLabel)
                    .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(termLabel)
                    .addComponent(modTermComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(creditsLabel)
                    .addComponent(creditsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numCWLabel)
                    .addComponent(numCWTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numExamsLabel)
                    .addComponent(numExamsTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(addModButton)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>                        

    //MY BACK-END CODE
    //######################################################################################################
    public final void myInitComponents() {
        setLocationRelativeTo(null);
}
    
    private void addModButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
       
        if(inputsValid(flags)){           
            
            //get all information entered in textfields and add to database
            modTitle = modTitleTextField.getText().toLowerCase();
            modTitle = modTitle.substring(0, 1).toUpperCase() + modTitle.substring(1);
            
            modLeader = modLeaderTextfield.getText();           
            
            modCredits = creditsTextField.getText();
            exams = numExamsTextfield.getText();            
            courseworks = numCWTextfield.getText(); 
            weighting = weightTextField.getText(); 
            modTerm = (String)modTermComboBox.getSelectedItem();
            modCode = modCodeTextField.getText().toLowerCase();     
                
            //open database            
            ModuleDatabase db = new ModuleDatabase();
            db.initDatabase("modules.txt");
            db.insertModule(modTitle, modCode, modCredits, courseworks, exams, modLeader, weighting,modTerm);

            //close the dialog box and return to 'Manage Users' window       
            dispose();
        }else{
            String invalidInput = "Please enter correct input in the highlighted fields(red)."
                                 +"\n Check that every field is filled before proceeding";
            JOptionPane.showMessageDialog(null, invalidInput, "Invalid Input", JOptionPane.PLAIN_MESSAGE);
        }
               
        
        
    }                                            

      
    
    private void modTitleTextFieldFocusLost(java.awt.event.FocusEvent evt) {                                            
        String modTitleRegex = "^[\\p{L} .'-]+$";
        if((modTitleTextField.getText().matches(modTitleRegex))){                        
            flags[0] = true; 
        }else{            
            modTitleTextField.setForeground(Color.RED);
            flags[0] = false;
        }
      
    }                                           

    private void modCodeTextFieldFocusLost(java.awt.event.FocusEvent evt) {                                           
        String modCodeRegex = "[a-zA-Z]{2}\\d{4}";
        if((modCodeTextField.getText().matches(modCodeRegex))){                       
            flags[1] = true;
        }else{            
            modCodeTextField.setForeground(Color.RED); 
            flags[1] = false;
        }
        
    }                                          

    private void creditsTextFieldFocusLost(java.awt.event.FocusEvent evt) {                                           
        String credsRegex = "\\d{2}";
        if((creditsTextField.getText().matches(credsRegex))){                        
            flags[2] = true;
        }else{            
            creditsTextField.setForeground(Color.RED);
            flags[2] = false;
        }
        
    }                                          

    private void numExamsTextfieldFocusLost(java.awt.event.FocusEvent evt) {                                            
        String NumRegex = "\\d{2}";
        if((numExamsTextfield.getText().matches(NumRegex))){
            flags[3] = true;
        }else{            
            numExamsTextfield.setForeground(Color.RED);
            flags[3] = false;
        }
        
    }                                           
 
    private void modTitleTextFieldFocusGained(java.awt.event.FocusEvent evt) {                                              
        modTitleTextField.setForeground(Color.BLACK);
        SwingUtilities.invokeLater( new Runnable() {
                @Override
                public void run() {
                        modTitleTextField.selectAll();		
                }});
    }                                             

    private void modCodeTextFieldFocusGained(java.awt.event.FocusEvent evt) {                                             
        modCodeTextField.setForeground(Color.BLACK); 
        SwingUtilities.invokeLater( new Runnable() {
                @Override
                public void run() {
                        modCodeTextField.selectAll();		
                }});
    }                                            

    private void creditsTextFieldFocusGained(java.awt.event.FocusEvent evt) {                                             
        creditsTextField.setForeground(Color.BLACK);
        SwingUtilities.invokeLater( new Runnable() {
                @Override
                public void run() {
                        creditsTextField.selectAll();		
                }});
    }                                            

    private void numExamsTextfieldFocusGained(java.awt.event.FocusEvent evt) {                                              
        numExamsTextfield.setForeground(Color.BLACK); 
        SwingUtilities.invokeLater( new Runnable() {
                @Override
                public void run() {
                        numExamsTextfield.selectAll();		
                }});
    }                                             

    private void numCWTextfieldFocusGained(java.awt.event.FocusEvent evt) {                                           
        numCWTextfield.setForeground(Color.BLACK);
        SwingUtilities.invokeLater( new Runnable() {
                @Override
                public void run() {
                        numCWTextfield.selectAll();		
                }});
    }                                          

    private void numCWTextfieldFocusLost(java.awt.event.FocusEvent evt) {                                         
        String numCWRegex = "\\d{2}";
        if((numCWTextfield.getText().matches(numCWRegex))){
            flags[4] = true;
        }else{            
            numCWTextfield.setForeground(Color.RED);
            flags[4] = false;
        }
    }                                        

    private void modLeaderTextfieldFocusGained(java.awt.event.FocusEvent evt) {                                               
        modLeaderTextfield.setForeground(Color.BLACK);
        SwingUtilities.invokeLater( new Runnable() {
                @Override
                public void run() {
                        modLeaderTextfield.selectAll();		
                }});
    }                                              

    private void modLeaderTextfieldFocusLost(java.awt.event.FocusEvent evt) {                                             
        String modLeadRegex = "^[\\p{L} .'-]+$";
        if((modLeaderTextfield.getText().matches(modLeadRegex))){                        
            flags[5] = true; 
        }else{            
            modLeaderTextfield.setForeground(Color.RED);
            flags[5] = false;
        }
    }                                            

    private void weightTextFieldFocusGained(java.awt.event.FocusEvent evt) {                                            
        weightTextField.setForeground(Color.BLACK);
        SwingUtilities.invokeLater( new Runnable() {
                @Override
                public void run() {
                        weightTextField.selectAll();		
                }});
    }                                           

    private void weightTextFieldFocusLost(java.awt.event.FocusEvent evt) {                                          
        String weightingRegex = "\\d{2}";
        if((weightTextField.getText().matches(weightingRegex))){
            flags[6] = true;
        }else{            
            weightTextField.setForeground(Color.RED);
            flags[6] = false;
        }
    }                                         

    /**checks if all inputs are valid
     * @param flags array containing boolean values for the input fields
     * @return True if all are valid False otherwise
     */
    public boolean inputsValid(boolean[] flags){
        boolean b = true;
        for(boolean flag : flags){
            if(flag == false){
                b = false;
                break;
               }
        }
        return b;    
    } 
    
     
//##################################END OF BACKEND####################################################
    
    
    // Variables declaration - do not modify                     
    private final javax.swing.JButton addModButton = new javax.swing.JButton();
    private javax.swing.JLabel creditsLabel;
    private final javax.swing.JTextField creditsTextField = new javax.swing.JTextField();
    private javax.swing.JLabel fnameLabel;
    private javax.swing.JLabel modCodeLabel;
    private final javax.swing.JTextField modCodeTextField = new javax.swing.JTextField();
    private javax.swing.JLabel modLeaderLabel;
    private javax.swing.JTextField modLeaderTextfield;
    private javax.swing.JComboBox modTermComboBox;
    private final javax.swing.JTextField modTitleTextField = new javax.swing.JTextField();
    private javax.swing.JLabel numCWLabel;
    private final javax.swing.JTextField numCWTextfield = new javax.swing.JTextField();
    private javax.swing.JLabel numExamsLabel;
    private final javax.swing.JTextField numExamsTextfield = new javax.swing.JTextField();
    private javax.swing.JLabel termLabel;
    private javax.swing.JTextField weightTextField;
    private javax.swing.JLabel weightingLabel;
    // End of variables declaration                   
}
